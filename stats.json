{"leetcode":{"easy":19,"hard":0,"medium":3,"shas":{"0200-number-of-islands":{"0200-number-of-islands.py":"76e854779d166b32039c110d4c4a00cbe1d95286","README.md":"42a12c0fca41e0bf0eaafabd16b28121853b36ce","difficulty":"medium"},"README.md":{"":"b137ea2b60068bd986f80607149dadafe326f4b8"},"0079-word-search":{"0079-word-search.py":"ab75a8187e2853f05171590a7c2dc4e697cc73df","README.md":"4eeb6a3a59967e8446a453ec8eba4e517a745d40","difficulty":"medium"},"0871-keys-and-rooms":{"0871-keys-and-rooms.py":"c03f1f7c3645d36ddb33c68758bc82f240f39dec","README.md":"f5774014db9acda17350020e347e44692e09eec7","difficulty":"medium"},"stats.json":{"":"06bb3224047397a2169ce74cb22b8a38b6c0d337"},"0100-same-tree":{"0100-same-tree.py":"f02466b50d67d92dc09a85cb7342ef0b66c453f0","README.md":"e68046f2dc906bcd38453dd92eec5c257d4694a9","difficulty":"easy"},"0101-symmetric-tree":{"0101-symmetric-tree.py":"4d0a71783599bac162b27cf89bb03753edde3d69","README.md":"1f2113012a39cfbad1ebdddb1b47cba18e5fa452","difficulty":"easy"},"0094-binary-tree-inorder-traversal":{"0094-binary-tree-inorder-traversal.py":"ef459f3e8ad2d2a1627488f4f875e3981bf2d17a","README.md":"bd34dc7858ef18ca0298bb98d645a48123cf98b8","difficulty":"easy"},"0104-maximum-depth-of-binary-tree":{"0104-maximum-depth-of-binary-tree.py":"c6120f2cab00787ee0d45f34060123784e8ff1ed","README.md":"3e88d40eac7067a0b69cceb90c76020b6f152ae0","difficulty":"easy"},"0530-minimum-absolute-difference-in-bst":{"0530-minimum-absolute-difference-in-bst.py":"f0dfa3932b39c7c07dcfbe7df758bc0522330794","README.md":"d1f78dcffe970a454029a9576602d9d14fea6e17","difficulty":"easy"},"1609-find-all-the-lonely-nodes":{"1609-find-all-the-lonely-nodes.py":"2bf66bcb9abbc6d8fb7f49574e76d3160bbd8511","README.md":"d593177f0355d8938cd069f7cede9c37d2c3a696","difficulty":"easy"},"0617-merge-two-binary-trees":{"0617-merge-two-binary-trees.py":"a749f84af62ac6a609ae7cb234a4d8844ecb73a6","README.md":"a5ee7bb0ad8a9549b8a9fa75c6d5ce5de809e112","difficulty":"easy"},"1035-cousins-in-binary-tree":{"1035-cousins-in-binary-tree.py":"ddc6096beb35d517cb9602911cc0096c5f53581e","README.md":"84c17165cd3a0143f8f8c7a9f6e43f8a851c52af","difficulty":"easy"},"2121-find-if-path-exists-in-graph":{"2121-find-if-path-exists-in-graph.py":"ea3f2e6e6b7b7d6dc62b98a74fb62ab595d28ce6","README.md":"6e74b14e557cb61cc4175bd9ce63fdf484c88bd7","difficulty":"easy"},"0111-minimum-depth-of-binary-tree":{"0111-minimum-depth-of-binary-tree.py":"7cd73f563e145bf163ba2cb1200b0ffb4e12cc15","README.md":"ef874e714bbcb62cf96d64acfc0b679559ce9d2f","difficulty":"easy"},"0112-path-sum":{"0112-path-sum.py":"2099d8c0f89c9369652954d24e80da06c7c81060","README.md":"98772e551dafb6d42f9d932cfe0bd4fdf77d93d6","difficulty":"easy"},"0637-average-of-levels-in-binary-tree":{"0637-average-of-levels-in-binary-tree.py":"c50993e10a8a2e5565e8cff5cd4de5383e8dd3c4","README.md":"aaa6ac767f5432694c7fb7c1db70135c1c177dc8","difficulty":"easy"},"0653-two-sum-iv-input-is-a-bst":{"0653-two-sum-iv-input-is-a-bst.py":"f2b3c816c47267864baf583442fd911e7e00005a","README.md":"dba06457cc86aaff3aaaf66fee1336e49661d4b3","difficulty":"easy"},"0733-flood-fill":{"0733-flood-fill.py":"fb05ae1c346d057c262b8d656d7c6742f7ed42dd","README.md":"5f566994e0c32c1343ebe6a06f964a9e48de867c","difficulty":"easy"},"0226-invert-binary-tree":{"0226-invert-binary-tree.py":"a6e66b63425fdbfb450ce0fd3977fb13337a3c36","README.md":"50f4a6354112c1afacef29ffc7209e5f9f7095d8","difficulty":"easy"},"0774-maximum-depth-of-n-ary-tree":{"0774-maximum-depth-of-n-ary-tree.py":"da0e767f81fec612923468e953ed1ebf3f96bf88","README.md":"91d733d141822b72a94d5338061c5ada69024ed4","difficulty":"easy"},"0799-minimum-distance-between-bst-nodes":{"0799-minimum-distance-between-bst-nodes.py":"3ad54281652673308e691effd0655ed3b0ae72c7","README.md":"9d6013009ce0b266069d4c6ba279b750b2e5bfd0","difficulty":"easy"},"0404-sum-of-left-leaves":{"0404-sum-of-left-leaves.py":"17d7ed889df419c1e07a46c79397bbeef3ae91ad","README.md":"ac38605e80f3542e7c10c61df12ed09c0364fdfe","difficulty":"easy"},"1498-find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree":{"1498-find-a-corresponding-node-of-a-binary-tree-in-a-clone-of-that-tree.py":"dbaec9fdb51b9418b41b1b5b8c68eb1b1de07f89","README.md":"1eb3c8a6dcce703a0625b09f62ad51a089318598","difficulty":"easy"}},"solved":22}}